##
## WLD-521-R1 — ESPHome Modbus config (MiniPLC/MicroPLC ↔ WLD)
##

substitutions:
  wld_id: wld_1
  wld_prefix: "WLD#1"
  wld_address: "3"     # firmware default

# If UART/MODBUS aren’t defined globally, uncomment & set pins:
# uart:
#   id: rs485_uart
#   tx_pin: GPIO4
#   rx_pin: GPIO5
#   baud_rate: 19200
#   parity: NONE
#   stop_bits: 1
# modbus:
#   id: modbus_bus
#   uart_id: rs485_uart

modbus_controller:
  - id: ${wld_id}
    address: ${wld_address}
    modbus_id: modbus_bus
    update_interval: 1s
    command_throttle: 0ms

# ===================== Discrete Inputs (FC02) =====================
# DI states: 1..5 | Relay feedback: 60..61
binary_sensor:
  - platform: modbus_controller
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} DI1"
    address: 1
    register_type: discrete_input
  - platform: modbus_controller
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} DI2"
    address: 2
    register_type: discrete_input
  - platform: modbus_controller
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} DI3"
    address: 3
    register_type: discrete_input
  - platform: modbus_controller
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} DI4"
    address: 4
    register_type: discrete_input
  - platform: modbus_controller
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} DI5"
    address: 5
    register_type: discrete_input

  # Relay feedback
  - platform: modbus_controller
    id: ${wld_id}_r1_state
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} R1 state"
    address: 60
    register_type: discrete_input
  - platform: modbus_controller
    id: ${wld_id}_r2_state
    modbus_controller_id: ${wld_id}
    name: "${wld_prefix} R2 state"
    address: 61
    register_type: discrete_input

# ===================== DI Counters (FC03 Holding) =====================
# Base=1000, two regs per DI: [lo, hi]; combine into U32 template sensors.
sensor:
  # DI1 lo/hi
  - platform: modbus_controller
    id: ${wld_id}_di1_lo
    modbus_controller_id: ${wld_id}
    address: 1000
    register_type: holding
    value_type: U_WORD
    internal: true
  - platform: modbus_controller
    id: ${wld_id}_di1_hi
    modbus_controller_id: ${wld_id}
    address: 1001
    register_type: holding
    value_type: U_WORD
    internal: true

  # DI2 lo/hi
  - platform: modbus_controller
    id: ${wld_id}_di2_lo
    modbus_controller_id: ${wld_id}
    address: 1002
    register_type: holding
    value_type: U_WORD
    internal: true
  - platform: modbus_controller
    id: ${wld_id}_di2_hi
    modbus_controller_id: ${wld_id}
    address: 1003
    register_type: holding
    value_type: U_WORD
    internal: true

  # DI3 lo/hi
  - platform: modbus_controller
    id: ${wld_id}_di3_lo
    modbus_controller_id: ${wld_id}
    address: 1004
    register_type: holding
    value_type: U_WORD
    internal: true
  - platform: modbus_controller
    id: ${wld_id}_di3_hi
    modbus_controller_id: ${wld_id}
    address: 1005
    register_type: holding
    value_type: U_WORD
    internal: true

  # DI4 lo/hi
  - platform: modbus_controller
    id: ${wld_id}_di4_lo
    modbus_controller_id: ${wld_id}
    address: 1006
    register_type: holding
    value_type: U_WORD
    internal: true
  - platform: modbus_controller
    id: ${wld_id}_di4_hi
    modbus_controller_id: ${wld_id}
    address: 1007
    register_type: holding
    value_type: U_WORD
    internal: true

  # DI5 lo/hi
  - platform: modbus_controller
    id: ${wld_id}_di5_lo
    modbus_controller_id: ${wld_id}
    address: 1008
    register_type: holding
    value_type: U_WORD
    internal: true
  - platform: modbus_controller
    id: ${wld_id}_di5_hi
    modbus_controller_id: ${wld_id}
    address: 1009
    register_type: holding
    value_type: U_WORD
    internal: true

  # Combined U32s
  - platform: template
    name: "${wld_prefix} DI1 Count"
    unit_of_measurement: "pulses"
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      return (uint32_t(id(${wld_id}_di1_lo).state) | (uint32_t(id(${wld_id}_di1_hi).state) << 16));
  - platform: template
    name: "${wld_prefix} DI2 Count"
    unit_of_measurement: "pulses"
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      return (uint32_t(id(${wld_id}_di2_lo).state) | (uint32_t(id(${wld_id}_di2_hi).state) << 16));
  - platform: template
    name: "${wld_prefix} DI3 Count"
    unit_of_measurement: "pulses"
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      return (uint32_t(id(${wld_id}_di3_lo).state) | (uint32_t(id(${wld_id}_di3_hi).state) << 16));
  - platform: template
    name: "${wld_prefix} DI4 Count"
    unit_of_measurement: "pulses"
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      return (uint32_t(id(${wld_id}_di4_lo).state) | (uint32_t(id(${wld_id}_di4_hi).state) << 16));
  - platform: template
    name: "${wld_prefix} DI5 Count"
    unit_of_measurement: "pulses"
    accuracy_decimals: 0
    update_interval: 1s
    lambda: |-
      return (uint32_t(id(${wld_id}_di5_lo).state) | (uint32_t(id(${wld_id}_di5_hi).state) << 16));

# ===================== Coils & Relay Control (FC05) =====================
# ONE consolidated switch: block with all helpers + user-facing template switches.
switch:
  # --- Relay pulse helpers (internal, optimistic) ---
  - platform: modbus_controller
    id: ${wld_id}_r1_on_pulse
    modbus_controller_id: ${wld_id}
    address: 200
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_r1_on_pulse

  - platform: modbus_controller
    id: ${wld_id}_r1_off_pulse
    modbus_controller_id: ${wld_id}
    address: 210
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_r1_off_pulse

  - platform: modbus_controller
    id: ${wld_id}_r2_on_pulse
    modbus_controller_id: ${wld_id}
    address: 201
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_r2_on_pulse

  - platform: modbus_controller
    id: ${wld_id}_r2_off_pulse
    modbus_controller_id: ${wld_id}
    address: 211
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_r2_off_pulse

  # --- User-facing relay switches (follow feedback; pulse helpers) ---
  - platform: template
    name: "${wld_prefix} Relay 1"
    lambda: |-
      return id(${wld_id}_r1_state).state;
    turn_on_action:
      - switch.turn_on: ${wld_id}_r1_on_pulse
    turn_off_action:
      - switch.turn_on: ${wld_id}_r1_off_pulse

  - platform: template
    name: "${wld_prefix} Relay 2"
    lambda: |-
      return id(${wld_id}_r2_state).state;
    turn_on_action:
      - switch.turn_on: ${wld_id}_r2_on_pulse
    turn_off_action:
      - switch.turn_on: ${wld_id}_r2_off_pulse

  # --- DI Enable coils (300..304) ---
  - platform: modbus_controller
    id: ${wld_id}_di1_enable_coil
    modbus_controller_id: ${wld_id}
    address: 300
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di1_enable_coil
  - platform: modbus_controller
    id: ${wld_id}_di2_enable_coil
    modbus_controller_id: ${wld_id}
    address: 301
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di2_enable_coil
  - platform: modbus_controller
    id: ${wld_id}_di3_enable_coil
    modbus_controller_id: ${wld_id}
    address: 302
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di3_enable_coil
  - platform: modbus_controller
    id: ${wld_id}_di4_enable_coil
    modbus_controller_id: ${wld_id}
    address: 303
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di4_enable_coil
  - platform: modbus_controller
    id: ${wld_id}_di5_enable_coil
    modbus_controller_id: ${wld_id}
    address: 304
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di5_enable_coil

  # --- DI Disable coils (320..324) ---
  - platform: modbus_controller
    id: ${wld_id}_di1_disable_coil
    modbus_controller_id: ${wld_id}
    address: 320
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di1_disable_coil
  - platform: modbus_controller
    id: ${wld_id}_di2_disable_coil
    modbus_controller_id: ${wld_id}
    address: 321
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di2_disable_coil
  - platform: modbus_controller
    id: ${wld_id}_di3_disable_coil
    modbus_controller_id: ${wld_id}
    address: 322
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di3_disable_coil
  - platform: modbus_controller
    id: ${wld_id}_di4_disable_coil
    modbus_controller_id: ${wld_id}
    address: 323
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di4_disable_coil
  - platform: modbus_controller
    id: ${wld_id}_di5_disable_coil
    modbus_controller_id: ${wld_id}
    address: 324
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di5_disable_coil

  # --- DI Counter reset coils (340..344) ---
  - platform: modbus_controller
    id: ${wld_id}_di1_reset_coil
    modbus_controller_id: ${wld_id}
    address: 340
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di1_reset_coil
  - platform: modbus_controller
    id: ${wld_id}_di2_reset_coil
    modbus_controller_id: ${wld_id}
    address: 341
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di2_reset_coil
  - platform: modbus_controller
    id: ${wld_id}_di3_reset_coil
    modbus_controller_id: ${wld_id}
    address: 342
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di3_reset_coil
  - platform: modbus_controller
    id: ${wld_id}_di4_reset_coil
    modbus_controller_id: ${wld_id}
    address: 343
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di4_reset_coil
  - platform: modbus_controller
    id: ${wld_id}_di5_reset_coil
    modbus_controller_id: ${wld_id}
    address: 344
    register_type: coil
    optimistic: true
    internal: true
    on_turn_on:
      - delay: 50ms
      - switch.turn_off: ${wld_id}_di5_reset_coil

# ===================== Buttons (nice UI wrappers) =====================
button:
  # Enable
  - platform: template
    name: "${wld_prefix} DI1 Enable"
    on_press:
      - switch.turn_on: ${wld_id}_di1_enable_coil
  - platform: template
    name: "${wld_prefix} DI2 Enable"
    on_press:
      - switch.turn_on: ${wld_id}_di2_enable_coil
  - platform: template
    name: "${wld_prefix} DI3 Enable"
    on_press:
      - switch.turn_on: ${wld_id}_di3_enable_coil
  - platform: template
    name: "${wld_prefix} DI4 Enable"
    on_press:
      - switch.turn_on: ${wld_id}_di4_enable_coil
  - platform: template
    name: "${wld_prefix} DI5 Enable"
    on_press:
      - switch.turn_on: ${wld_id}_di5_enable_coil

  # Disable
  - platform: template
    name: "${wld_prefix} DI1 Disable"
    on_press:
      - switch.turn_on: ${wld_id}_di1_disable_coil
  - platform: template
    name: "${wld_prefix} DI2 Disable"
    on_press:
      - switch.turn_on: ${wld_id}_di2_disable_coil
  - platform: template
    name: "${wld_prefix} DI3 Disable"
    on_press:
      - switch.turn_on: ${wld_id}_di3_disable_coil
  - platform: template
    name: "${wld_prefix} DI4 Disable"
    on_press:
      - switch.turn_on: ${wld_id}_di4_disable_coil
  - platform: template
    name: "${wld_prefix} DI5 Disable"
    on_press:
      - switch.turn_on: ${wld_id}_di5_disable_coil

  # Counter reset
  - platform: template
    name: "${wld_prefix} DI1 Counter Reset"
    on_press:
      - switch.turn_on: ${wld_id}_di1_reset_coil
  - platform: template
    name: "${wld_prefix} DI2 Counter Reset"
    on_press:
      - switch.turn_on: ${wld_id}_di2_reset_coil
  - platform: template
    name: "${wld_prefix} DI3 Counter Reset"
    on_press:
      - switch.turn_on: ${wld_id}_di3_reset_coil
  - platform: template
    name: "${wld_prefix} DI4 Counter Reset"
    on_press:
      - switch.turn_on: ${wld_id}_di4_reset_coil
  - platform: template
    name: "${wld_prefix} DI5 Counter Reset"
    on_press:
      - switch.turn_on: ${wld_id}_di5_reset_coil
