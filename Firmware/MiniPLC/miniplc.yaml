esphome:
  name: miniplc
  friendly_name: MiniPLC

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "zJ8x8WqP5KVphf7smWMrvlQBPc8KWmAnfYuV8EoLgLo="

ota:
  - platform: esphome
    password: "047c7b55a890fa60e31d671679c0555c"

#wifi:
#  ssid: !secret wifi_ssid
#  password: !secret wifi_password
#  ap:
#    ssid: "MiniPLC Fallback Hotspot"
#    password: "12345678"

#captive_portal:

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO0_OUT
  phy_addr: 1

web_server: 
  port: 80
  version: 3

uart:
  tx_pin: 17
  rx_pin: 16
  baud_rate: 19200
  id: mod_uart

modbus:
  send_wait_time: 200ms
  uart_id: mod_uart
  id: mod_bus

modbus_controller:
- id: modbus_device
  address: 0x1   ## address of the Modbus slave device on the bus
  update_interval: 1s
  modbus_id: mod_bus
  setup_priority: -10

one_wire:
  - platform: gpio
    pin: GPIO05
    id: hub_1
  - platform: gpio
    pin: GPIO04
    id: hub_2

i2c:
  - id: bus_a
    sda: 32
    scl: 33
    frequency: 400kHz
    scan: true

time:
  - platform: pcf8563
    id: pcf8563_time
    address: 0x51
  - platform: homeassistant
    # instead try to synchronize via network repeatedly ...
    on_time_sync:
      then:
        # ... and update the RTC when the synchronization was successful
        pcf8563.write_time:

pcf8574:
  - id: 'pcf8574_hub_a'
    address: 0x38
    pcf8575: false
  - id: 'pcf8574_hub_b'
    address: 0x39
    pcf8575: false

ads1115:
  - address: 0x48

font:
  - file: "gfonts://Roboto"
    id: roboto

display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    address: 0x3C
    rotation: 180
    id: oled_display
    lambda: |-
      it.print(0, 0, id(roboto), "HOMEMASTER!");

spi:
  miso_pin: GPIO12
  mosi_pin: GPIO13
  clk_pin: GPIO14

text_sensor:
  - platform: template
    name: "Current time"
    lambda: |-
      char str[17];
      time_t currTime = id(pcf8563_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return  { str };
    update_interval: 60s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO36
    name: "DI #1"
  - platform: gpio
    pin:
      number: GPIO39
    name: "DI #2"
  - platform: gpio
    pin:
      number: GPIO34
    name: "DI #3"
  - platform: gpio
    pin:
      number: GPIO35
    name: "DI #4"
  - platform: gpio
    name: "Button #1"
    pin:
      pcf8574: pcf8574_hub_a
      number: 0
      inverted: true
  - platform: gpio
    name: "Button #2"
    pin:
      pcf8574: pcf8574_hub_a
      number: 1
      inverted: true
  - platform: gpio
    name: "Button #3"
    pin:
      pcf8574: pcf8574_hub_a
      number: 2
      inverted: true
  - platform: gpio
    name: "Button #4"
    pin:
      pcf8574: pcf8574_hub_a
      number: 3
      inverted: true



switch:
 - platform: gpio
   name: "RELAY #1"
   pin:
      pcf8574: pcf8574_hub_b
      number: 2
      mode:
        output: true
      inverted: true
 - platform: gpio
   name: "RELAY #2"
   pin:
      pcf8574: pcf8574_hub_b
      number: 1
      mode:
        output: true
      inverted: true
 - platform: gpio
   name: "RELAY #3"
   pin:
      pcf8574: pcf8574_hub_b
      number: 0
      mode:
        output: true
      inverted: true

 - platform: gpio
   name: "RELAY #4"
   pin:
      pcf8574: pcf8574_hub_a
      number: 6
      mode:
        output: true
      inverted: true
 - platform: gpio
   name: "RELAY #5"
   pin:
      pcf8574: pcf8574_hub_a
      number: 5
      mode:
        output: true
      inverted: true
 - platform: gpio
   name: "RELAY #6"
   pin:
      pcf8574: pcf8574_hub_a
      number: 4
      mode:
        output: true
      inverted: true
 - platform: gpio
   name: "LED #2"
   pin:
      pcf8574: pcf8574_hub_b
      number: 3
      mode:
        output: true
      inverted: true
 - platform: gpio
   name: "LED #3"
   pin:
      pcf8574: pcf8574_hub_b
      number: 4
      mode:
        output: true
      inverted: true
 - platform: template
   name: "Switch buzzer"
   optimistic: true
   turn_on_action:
     - output.turn_on: buzzer_output
     - output.ledc.set_frequency:
         id: buzzer_output
         frequency: "2441Hz"
     - output.set_level:
         id: buzzer_output
         level: "75%"
   turn_off_action:
     - output.turn_off: buzzer_output
     
fan:
  - platform: speed
    output: dac_output
    name: "DAC 0-10V"

sensor:
  - platform: dallas_temp
    one_wire_id: hub_1
    address: 0x6f7c86e908646128
    name: "1-WIRE Dallas temperature BUS1"
    update_interval: 5s
  - platform: dallas_temp
    one_wire_id: hub_2
    address: 0xbc3c01d075cb5128
    name: "1-WIRE Dallas temperature BUS2"
    update_interval: 5s
 #MAX 31865 RTD 
  - platform: max31865
    name: "MAX 31856 Temperature 1"
    cs_pin: GPIO1
    reference_resistance: 400 立
    rtd_nominal_resistance: 100 立
    update_interval: 60s
  - platform: max31865
    name: "MAX 31856 Temperature 2"
    cs_pin: GPIO3
    reference_resistance: 4000 立
    rtd_nominal_resistance: 1000 立
    update_interval: 60s
  - platform: ads1115
    multiplexer: 'A0_GND'
    gain: 6.144
    name: "ADC AI4"
  - platform: ads1115
    multiplexer: 'A1_GND'
    gain: 6.144
    name: "ADC AI3"
    update_interval: 5s
    filters:
      - multiply: 3
  - platform: ads1115
    multiplexer: 'A2_GND'
    gain: 6.144
    name: "ADC AI2"
  - platform: ads1115
    multiplexer: 'A3_GND'
    gain: 6.144
    name: "ADC AI1"
  - platform: modbus_controller
    modbus_controller_id: modbus_device
    name: "Modbus Sensor"
    register_type: holding
    address: 0x0001    ## address of the register inside the Modbus slave device
    unit_of_measurement: "C"
    value_type: U_WORD


output:
 - platform: ledc
   pin: GPIO02
   id: buzzer_output  
 - platform: mcp4725
   id: dac_output
status_led:
  pin:
     pcf8574: pcf8574_hub_a
     number: 7
     mode:
       output: true
     inverted: false